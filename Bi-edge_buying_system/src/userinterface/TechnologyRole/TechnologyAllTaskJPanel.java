/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.TechnologyRole;

import Business.BiedgeBuyingSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;

import Business.Product.Product;

import java.awt.CardLayout;
import java.awt.Component;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vanit
 */
public class TechnologyAllTaskJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;

    private BiedgeBuyingSystem system;
    private Enterprise enterprise;
    private Employee employee;
    
    private BufferedReader reader;
    private String[] header = null;
    
    private ArrayList<Product> productList;

    /**
     * Creates new form TechnologyAllTaskJPanel
     */
    public TechnologyAllTaskJPanel(JPanel userProcessContainer,BiedgeBuyingSystem system, 
            Enterprise enterprise, Employee employee) {
    
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.enterprise = enterprise;
        this.employee = employee;
        productList = new ArrayList();
        
        populateComboBoxEnterprise();
        
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSubmit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TechOrgTbl = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        TechUpdatedTbl = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        calcuatejButton2 = new javax.swing.JButton();
        generatejButton3 = new javax.swing.JButton();
        networkjComboBox1 = new javax.swing.JComboBox<>();
        employeejComboBox3 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();

        btnSubmit.setBackground(new java.awt.Color(153, 153, 255));
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        TechOrgTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Prod ID", "Name", "Sales Price", "Source", "Quantity", "Sales Volume", "Delivery Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TechOrgTbl);

        TechUpdatedTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Prod ID", "Name", "Sales Price", "Quantity", "Sales Volume", "Delivery Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TechUpdatedTbl);

        jLabel1.setText("Original Data");

        jLabel2.setText("Updated Data");

        calcuatejButton2.setBackground(new java.awt.Color(153, 153, 255));
        calcuatejButton2.setText("Calcuate");
        calcuatejButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcuatejButton2ActionPerformed(evt);
            }
        });

        generatejButton3.setBackground(new java.awt.Color(153, 153, 255));
        generatejButton3.setText("Generate");
        generatejButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatejButton3ActionPerformed(evt);
            }
        });

        networkjComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkjComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkjComboBox1ActionPerformed(evt);
            }
        });

        employeejComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        employeejComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeejComboBox3ActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setEnabled(false);

        jLabel3.setText("EmployeeID");

        jLabel4.setText("Organization");

        jTextField2.setEditable(false);
        jTextField2.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(calcuatejButton2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 514, Short.MAX_VALUE)
                                .addComponent(btnSubmit)
                                .addGap(54, 54, 54)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(networkjComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(employeejComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(118, 118, 118))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(jTextField2))
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(generatejButton3)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 877, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(generatejButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(calcuatejButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(networkjComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(employeejComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnSubmit)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if(jTextField1.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Submit fail! ");
            return;
        }
        String name1 = (String) networkjComboBox1.getSelectedItem();
        String networkName = name1.substring(0, name1.indexOf(":"));
        String enterpriseName = name1.substring(name1.indexOf(":") + 1, name1.length());
        String employeeID = jTextField1.getText();
        Employee employeeTemp = system.getNetworkMap().get(networkName).getEnterpriseDirectory().
                getEnterpriseNameMap().get(enterpriseName).getOrganizationDirectory().
                getOrganizationTypeMap().get(Organization.Type.Marketing).getEmployeeDirectory().
                getEmployeeIDMap().get(employeeID);
        employeeTemp.setProductList(productList);
        system.getNetworkMap().get(networkName).getEnterpriseDirectory().
                getEnterpriseNameMap().get(enterpriseName).getOrganizationDirectory().
                getOrganizationTypeMap().get(Organization.Type.Marketing).getEmployeeDirectory().
                getEmployeeIDMap().put(employeeID, employeeTemp);
        
        JOptionPane.showMessageDialog(null, "Submit successfully! ");
        
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void generatejButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatejButton3ActionPerformed
        // TODO add your handling code here:
        
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(null);
        File f = fileChooser.getSelectedFile();
        if(f != null)
        {
            try {
                String fileName = f.getName();
                File file = new File(fileName);
                System.out.println(fileName);
                if(!file.exists())
                    throw new FileNotFoundException("File not found at the path specified: "+fileName);
                readFile(file);
            } catch (IOException ex) {
                Logger.getLogger(TechnologyAllTaskJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        employee.setProductList(productList);
        
        system.getNetworkMap().get(enterprise.getNetworkName()).getEnterpriseDirectory().
                getEnterpriseIDMap().get(enterprise.getEnterpriseID()).getOrganizationDirectory().
                getOrganizationTypeMap().get(Organization.Type.Technology).getEmployeeDirectory().
                getEmployeeIDMap().put(employee.getEmployeeID(), employee);
        
        populateOrignialTable();
    }//GEN-LAST:event_generatejButton3ActionPerformed

    
    private void populateComboBoxEnterprise() {
        networkjComboBox1.removeAllItems();
        employeejComboBox3.removeAllItems();
        //enterpriseTypeJComboBox.removeAllItems();
        System.out.println(enterprise.getEnterpriseList());
        for(int i = 0; i < enterprise.getEnterpriseList().size(); ++i)
        {
            
            String name = enterprise.getEnterpriseList().get(i).getNetworkName() + ":" +
                    enterprise.getEnterpriseList().get(i).getName();
            networkjComboBox1.addItem(name);
        }

    }
    
    
    private void networkjComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkjComboBox1ActionPerformed
        // TODO add your handling code here: 
        String name = (String) networkjComboBox1.getSelectedItem();
        
        if(name == null)
            return;
        else {
            String enterpriseName = name.substring(name.indexOf(":") + 1, name.length());
            Enterprise enterpriseValue = null;
            for(int i = 0; i < enterprise.getEnterpriseList().size(); ++i)
            {
                if(enterprise.getEnterpriseList().get(i).getName().equals(enterpriseName))
                    enterpriseValue = enterprise.getEnterpriseList().get(i);
            }
            for(Map.Entry<String,Employee> employees : enterpriseValue.getOrganizationDirectory().
                    getOrganizationTypeMap().get(Organization.Type.Marketing).getEmployeeDirectory().
                    getEmployeeIDMap().entrySet())
            {
                String employee = employees.getValue().getName() + "(" + employees.getKey() + ")";
                employeejComboBox3.addItem(employee);
            }
        }
        
        
        
    }//GEN-LAST:event_networkjComboBox1ActionPerformed

    private void employeejComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeejComboBox3ActionPerformed
        // TODO add your handling code here:
        String name1 = (String) networkjComboBox1.getSelectedItem();
        String name3 = (String) employeejComboBox3.getSelectedItem();
        
        Enterprise enterpriseValue = null;
        Employee employee = null;

        if(name1 == null || name3== null)
            return;
        else {
            String enterpriseName = name1.substring(name1.indexOf(":") + 1, name1.length());
            String employeeID = name3.substring(name3.indexOf("(") + 1, name3.length()-1);
 
            
            for(int i = 0; i < enterprise.getEnterpriseList().size(); ++i)
            {
                if(enterprise.getEnterpriseList().get(i).getName().equals(enterpriseName))
                    enterpriseValue = enterprise.getEnterpriseList().get(i);
            }
            for(Map.Entry<String,Employee> employees : enterpriseValue.getOrganizationDirectory().
                    getOrganizationTypeMap().get(Organization.Type.Marketing).getEmployeeDirectory().
                    getEmployeeIDMap().entrySet())
            {
                if(employeeID.equals(employees.getKey()))
                    employee = employees.getValue();
            }
            jTextField1.setText(employeeID);
            jTextField2.setText(employee.getOrganizationName());
        }
    }//GEN-LAST:event_employeejComboBox3ActionPerformed

    private void calcuatejButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcuatejButton2ActionPerformed
        // TODO add your handling code here:
        Map<String, Map<Integer,String>> products = new HashMap<String, Map<Integer,String>>();
        for(Product product : productList)
        {
            if(products.containsKey(product.getProductID()))
            {
                Map<Integer, String> value = products.get(product.getProductID());
                int salesVolume = product.getSalesVolume() + Integer.parseInt(value.get(4));
                int salesPrice = 0;
                if(product.getSalesPrice() > Integer.parseInt(value.get(2)))
                {
                    salesPrice = Integer.parseInt(value.get(2));
                    
                }else {
                    salesPrice = product.getSalesPrice();
                    value.put(3, String.valueOf(product.getQuantity()));
                    value.put(5, product.getDeliveryDate());
                }
                product.getSalesPrice();
                value.put(4, String.valueOf(salesVolume));
                value.put(2, String.valueOf(salesPrice));
                products.put(product.getProductID(), value);
            }else {
                Map<Integer, String> value = new HashMap<Integer, String>();
                value.put(0,product.getProductID());
                value.put(1, product.getProductName());
                value.put(2, String.valueOf(product.getSalesPrice()));
                value.put(3, String.valueOf(product.getQuantity()));
                value.put(4, String.valueOf(product.getSalesVolume()));
                value.put(5, product.getDeliveryDate());
                products.put(product.getProductID(), value);
            }
        }
        
        ArrayList<Product> productTemp = new ArrayList();
        for(Map<Integer,String> value : products.values())
        {
            Product product = new Product(value.get(0),value.get(1),Integer.parseInt(value.get(2)),null,
                    Integer.parseInt(value.get(3)),Integer.parseInt(value.get(4)), value.get(5));
            productTemp.add(product);
        }
        productList = productTemp;
        populateUpdateTable();
        
    }//GEN-LAST:event_calcuatejButton2ActionPerformed

    private void populateUpdateTable()
    {
        DefaultTableModel dtm = (DefaultTableModel) TechUpdatedTbl.getModel();
        dtm.setRowCount(0);
        for(int i=0;i<productList.size();i++)
        {
            Product product = productList.get(i);
            Object[] row = new Object[7];
            row[0] = product.getProductID();
            row[1] = product.getProductName();
            row[2] = product.getSalesPrice();
            row[3] = product.getQuantity();
            row[4] = product.getSalesVolume();
            row[5] = product.getDeliveryDate();
            row[6] = "generated";
            dtm.addRow(row);
        }
    }
    
    private void populateOrignialTable()
    {
        DefaultTableModel dtm = (DefaultTableModel) TechOrgTbl.getModel();
        dtm.setRowCount(0);
        for(int i=0;i<productList.size();i++)
        {
            Product product = productList.get(i);
            Object[] row = new Object[7];
            row[0] = product.getProductID();
            row[1] = product.getProductName();
            row[2] = product.getSalesPrice();
            row[3] = product.getSource();
            row[4] = product.getQuantity();
            row[5] = product.getSalesVolume();
            row[6] = product.getDeliveryDate();
            dtm.addRow(row);
        }
    }
    
    private void readFile(File file) throws FileNotFoundException, IOException
    {
        reader = new BufferedReader(new FileReader(file));
        String[] row;
        while((row = getNextRow()) != null ){
            /*
        }
            for(int i = 0; i < row.length; ++ i)
            {
                System.out.println(row[i]);
            }
            */
            generateProduct(row);
        }
    }
    
    private void generateProduct(String[] row)
    {
        int salesPrice = Integer.parseInt(row[2]);
        int quantity = Integer.parseInt(row[4]);
        int shippingFee = Integer.parseInt(row[5]);
        Product product = new Product(row[0], row[1],salesPrice, row[3], quantity, shippingFee, row[6]);
        productList.add(product);
        
    }
    
    private String[] getNextRow() throws IOException{
        if (header == null)
            header = getFileHeader();
        String line = "";
        if((line = reader.readLine()) != null){
            
            String[] rows = line.split(",");
            System.out.println(rows[0]);
            return rows;
        }
        return null;
    }
    
    private String[] getFileHeader() throws IOException{
        if(header == null){
            String line = "";
            if((line = reader.readLine()) != null){
                String[] rows = line.split(",");
                System.out.println(rows[0]);
                header = rows;
            }
        }
        return header;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TechOrgTbl;
    private javax.swing.JTable TechUpdatedTbl;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton calcuatejButton2;
    private javax.swing.JComboBox<String> employeejComboBox3;
    private javax.swing.JButton generatejButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JComboBox<String> networkjComboBox1;
    // End of variables declaration//GEN-END:variables
}
