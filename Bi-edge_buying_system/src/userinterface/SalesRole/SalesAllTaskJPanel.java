/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SalesRole;

import Business.BiedgeBuyingSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Order.Order;
import Business.Organization.MarketingOrganization;
import Business.Organization.Organization;
import Business.Organization.SalesOrganization;
import Business.Product.Product;
import Business.UserAccount.UserAccount;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vanit
 */
public class SalesAllTaskJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SalesAllTaskJPanel
     */
    private JPanel userProcessContainer;
    private BiedgeBuyingSystem system;
    private Enterprise enterprise;
    private Employee employee;
    private ArrayList<Order> orderList;

    public SalesAllTaskJPanel(JPanel userProcessContainer,BiedgeBuyingSystem system, 
            Enterprise enterprise, Employee employee) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.enterprise = enterprise;
        this.employee = employee;
        this.orderList = employee.getOrderList();
        
        populateTable();
        populateCombox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSubmit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        SalesTbl = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        networkjComboBox4 = new javax.swing.JComboBox<>();
        employeejComboBox3 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        organizationjComboBox1 = new javax.swing.JComboBox<>();

        btnSubmit.setBackground(new java.awt.Color(153, 153, 255));
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        SalesTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Salesman", "Customer ID", "Prod ID", "Sales Price", "Quantity", "Total Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(SalesTbl);

        btnBack.setBackground(new java.awt.Color(153, 153, 255));
        btnBack.setText("< Back");

        networkjComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkjComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkjComboBox4ActionPerformed(evt);
            }
        });

        employeejComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        employeejComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeejComboBox3ActionPerformed(evt);
            }
        });

        jLabel3.setText("EmployeeID");

        jTextField1.setEditable(false);
        jTextField1.setEnabled(false);

        organizationjComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        organizationjComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationjComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnBack)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSubmit)
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(employeejComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(networkjComboBox4, 0, 109, Short.MAX_VALUE)
                                .addComponent(organizationjComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(134, 134, 134))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)
                        .addComponent(btnSubmit))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(networkjComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(1, 1, 1)
                .addComponent(organizationjComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(employeejComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(140, 140, 140))
        );
    }// </editor-fold>//GEN-END:initComponents
 
    private void populateTable()
    {
        DefaultTableModel dtm = (DefaultTableModel) SalesTbl.getModel();
        dtm.setRowCount(0);
        for(int i=0;i<orderList.size();i++)
        {
            Order order = orderList.get(i);
            Object[] row = new Object[7];
            row[0] = order.getOrderID();
            row[1] = order.getSalesman();
            row[2] = order.getCustomer().getCustomerID();
            row[3] = order.getProductID();
            row[4] = order.getSalesPrice();
            row[5] = order.getQuantity();
            row[6] = order.getTotalPrice();
            dtm.addRow(row);
        }
    }
    
    private void populateCombox()
    {
        networkjComboBox4.removeAllItems();
        employeejComboBox3.removeAllItems();
        organizationjComboBox1.removeAllItems();
        //enterpriseTypeJComboBox.removeAllItems();
        System.out.println(enterprise.getEnterpriseList());
        for(int i = 0; i < enterprise.getEnterpriseList().size(); ++i)
        {
            
            String name = enterprise.getEnterpriseList().get(i).getNetworkName() + ":" +
                    enterprise.getEnterpriseList().get(i).getName();
            networkjComboBox4.addItem(name);
        }
        organizationjComboBox1.addItem(Organization.Type.ShippingManagement.getValue());
        organizationjComboBox1.addItem(Organization.Type.Accounting.getValue());
    }
    
    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if(jTextField1.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Submit fail! ");
            return;
        }
        String name1 = (String) networkjComboBox4.getSelectedItem();
        String networkName = name1.substring(0, name1.indexOf(":"));
        String enterpriseName = name1.substring(name1.indexOf(":") + 1, name1.length());
        String employeeID = jTextField1.getText();
        
        String organizationType = (String)organizationjComboBox1.getSelectedItem();
        if(organizationType.equals(Organization.Type.Accounting.getValue()))
        {
            Employee employeeTemp = system.getNetworkMap().get(networkName).getEnterpriseDirectory().
            getEnterpriseNameMap().get(enterpriseName).getOrganizationDirectory().
            getOrganizationTypeMap().get(Organization.Type.Accounting).getEmployeeDirectory().
            getEmployeeIDMap().get(employeeID);
        
            employeeTemp.setOrderList(orderList);

            system.getNetworkMap().get(networkName).getEnterpriseDirectory().
            getEnterpriseNameMap().get(enterpriseName).getOrganizationDirectory().
            getOrganizationTypeMap().get(Organization.Type.Accounting).getEmployeeDirectory().
            getEmployeeIDMap().put(employeeID, employeeTemp);
        }else {
            Employee employeeTemp = system.getNetworkMap().get(networkName).getEnterpriseDirectory().
            getEnterpriseNameMap().get(enterpriseName).getOrganizationDirectory().
            getOrganizationTypeMap().get(Organization.Type.Accounting).getEmployeeDirectory().
            getEmployeeIDMap().get(employeeID);
        
            employeeTemp.setOrderList(orderList);

            system.getNetworkMap().get(networkName).getEnterpriseDirectory().
            getEnterpriseNameMap().get(enterpriseName).getOrganizationDirectory().
            getOrganizationTypeMap().get(Organization.Type.Accounting).getEmployeeDirectory().
            getEmployeeIDMap().put(employeeID, employeeTemp);
        }

        JOptionPane.showMessageDialog(null, "Submit successfully! ");
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void networkjComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkjComboBox4ActionPerformed
        // TODO add your handling code here:
        

    }//GEN-LAST:event_networkjComboBox4ActionPerformed

    private void employeejComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeejComboBox3ActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_employeejComboBox3ActionPerformed

    private void organizationjComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationjComboBox1ActionPerformed
        // TODO add your handling code here:
        
        String name = (String) networkjComboBox4.getSelectedItem();
        String organizationType = (String) organizationjComboBox1.getSelectedItem();

        if(name == null)
            return;
        else {
            String enterpriseName = name.substring(name.indexOf(":") + 1, name.length());
            Enterprise enterpriseValue = null;
            for(int i = 0; i < enterprise.getEnterpriseList().size(); ++i)
            {
                if(enterprise.getEnterpriseList().get(i).getName().equals(enterpriseName))
                enterpriseValue = enterprise.getEnterpriseList().get(i);
            }
            if(organizationType.equals(Organization.Type.Accounting.getValue()))
            {
                for(Map.Entry<String,Employee> employees : enterpriseValue.getOrganizationDirectory().
                    getOrganizationTypeMap().get(Organization.Type.Accounting).getEmployeeDirectory().
                    getEmployeeIDMap().entrySet())
                {
                    String employee = employees.getValue().getName() + "(" + employees.getKey() + ")";
                    employeejComboBox3.addItem(employee);
                }
            }else {
                for(Map.Entry<String,Employee> employees : enterpriseValue.getOrganizationDirectory().
                    getOrganizationTypeMap().get(Organization.Type.ShippingManagement).getEmployeeDirectory().
                    getEmployeeIDMap().entrySet())
                {
                    String employee = employees.getValue().getName() + "(" + employees.getKey() + ")";
                    employeejComboBox3.addItem(employee);
                }
            }
        }
        
        
        String name3 = (String) employeejComboBox3.getSelectedItem();

        Employee employee = null;

        if(name3== null)
            return;
        else {
            String employeeID = name3.substring(name3.indexOf("(") + 1, name3.length()-1);

            
            jTextField1.setText(employeeID);
        }
    }//GEN-LAST:event_organizationjComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable SalesTbl;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> employeejComboBox3;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JComboBox<String> networkjComboBox4;
    private javax.swing.JComboBox<String> organizationjComboBox1;
    // End of variables declaration//GEN-END:variables
}
